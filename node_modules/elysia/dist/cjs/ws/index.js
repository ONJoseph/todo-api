"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ElysiaWS = exports.websocket = void 0;
const error_1 = require("../error");
exports.websocket = {
    open(ws) {
        ws.data.open?.(ws);
    },
    message(ws, message) {
        ws.data.message?.(ws, message);
    },
    drain(ws) {
        ws.data.drain?.(ws);
    },
    close(ws, code, reason) {
        ws.data.close?.(ws, code, reason);
    }
};
class ElysiaWS {
    constructor(raw, data) {
        this.raw = raw;
        this.data = data;
        this.validator = raw.data.validator;
    }
    get publish() {
        return (topic, data = undefined, compress) => {
            if (this.validator?.Check(data) === false)
                throw new error_1.ValidationError('message', this.validator, data);
            if (typeof data === 'object')
                data = JSON.stringify(data);
            this.raw.publish(topic, data, compress);
            return this;
        };
    }
    get send() {
        return (data) => {
            if (this.validator?.Check(data) === false)
                throw new error_1.ValidationError('message', this.validator, data);
            if (typeof data === 'object')
                data = JSON.stringify(data);
            this.raw.send(data);
            return this;
        };
    }
    get subscribe() {
        return (room) => {
            this.raw.subscribe(room);
            return this;
        };
    }
    get unsubscribe() {
        return (room) => {
            this.raw.unsubscribe(room);
            return this;
        };
    }
    get cork() {
        return (callback) => {
            this.raw.cork(callback);
            return this;
        };
    }
    get close() {
        return () => {
            this.raw.close();
            return this;
        };
    }
    get terminate() {
        return this.raw.terminate.bind(this.raw);
    }
    get isSubscribed() {
        return this.raw.isSubscribed.bind(this.raw);
    }
    get remoteAddress() {
        return this.raw.remoteAddress;
    }
}
exports.ElysiaWS = ElysiaWS;
