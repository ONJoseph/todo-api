import{ValidationError as t}from"../error";export const websocket={open(t){t.data.open?.(t)},message(t,r){t.data.message?.(t,r)},drain(t){t.data.drain?.(t)},close(t,r,e){t.data.close?.(t,r,e)}};export class ElysiaWS{raw;data;validator;constructor(t,r){this.raw=t,this.data=r,this.validator=t.data.validator}get publish(){return(r,e,s)=>{if(this.validator?.Check(e)===!1)throw new t("message",this.validator,e);return"object"==typeof e&&(e=JSON.stringify(e)),this.raw.publish(r,e,s),this}}get send(){return r=>{if(this.validator?.Check(r)===!1)throw new t("message",this.validator,r);return"object"==typeof r&&(r=JSON.stringify(r)),this.raw.send(r),this}}get subscribe(){return t=>(this.raw.subscribe(t),this)}get unsubscribe(){return t=>(this.raw.unsubscribe(t),this)}get cork(){return t=>(this.raw.cork(t),this)}get close(){return()=>(this.raw.close(),this)}get terminate(){return this.raw.terminate.bind(this.raw)}get isSubscribed(){return this.raw.isSubscribed.bind(this.raw)}get remoteAddress(){return this.raw.remoteAddress}}