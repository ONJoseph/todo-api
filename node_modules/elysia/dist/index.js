import{Memoirist as e}from"memoirist";import t from"eventemitter3";import{createTraceListener as r}from"./trace";import{ElysiaWS as s,websocket as i}from"./ws";import{isNotEmpty as o}from"./handler";import{composeHandler as n,composeGeneralHandler as a,composeErrorHandler as h}from"./compose";import{mergeHook as c,getSchemaValidator as d,getResponseSchemaValidator as f,mergeDeep as p,mergeCookie as u,checksum as l,mergeLifeCycle as m,filterGlobalHook as v,asGlobal as y}from"./utils";import{createDynamicErrorHandler as g,createDynamicHandler as b}from"./dynamic-handle";import{isProduction as k,ERROR_CODE as R,ValidationError as w}from"./error";import{t as E}from"./custom-types";/**
 * ### Elysia Server
 * Main instance to create web server using Elysia
 *
 * ---
 * @example
 * ```typescript
 * import { Elysia } from 'elysia'
 *
 * new Elysia()
 *     .get("/", () => "Hello")
 *     .listen(8080)
 * ```
 */export default class x{config;dependencies={};store={};decorators={};definitions={type:{},error:{}};schema={};event={start:[],request:[],parse:[],transform:[],beforeHandle:[],afterHandle:[],onResponse:[],trace:[],error:[],stop:[]};reporter=new t;server=null;getServer(){return this.server}validator=null;router=new e;routes=[];staticRouter={handlers:[],variables:"",map:{},all:""};dynamicRouter=new e;lazyLoadModules=[];path="";constructor(e){this.config={forceErrorEncapsulation:!1,prefix:"",aot:!0,strictPath:!1,scoped:!1,cookie:{},...e,seed:e?.seed===void 0?"":e?.seed}}add(e,t,r,s,{allowMeta:i=!1,skipPrefix:a=!1}={allowMeta:!1,skipPrefix:!1}){for(let h of("string"==typeof t&&(t=[t]),t)){if(h=""===h?h:47===h.charCodeAt(0)?h:`/${h}`,this.config.prefix&&!a&&(h=this.config.prefix+h),s?.type)switch(s.type){case"text":s.type="text/plain";break;case"json":s.type="application/json";break;case"formdata":s.type="multipart/form-data";break;case"urlencoded":s.type="application/x-www-form-urlencoded";break;case"arrayBuffer":s.type="application/octet-stream"}let t=this.definitions.type,p=d(s?.cookie??this.validator?.cookie,{dynamic:!this.config.aot,models:t,additionalProperties:!0});o(this.config.cookie??{})&&(p?// @ts-ignore
p.schema=u(// @ts-ignore
p.schema,this.config.cookie??{}):p=d(// @ts-ignore
E.Cookie({},this.config.cookie),{dynamic:!this.config.aot,models:t,additionalProperties:!0}));let l={body:d(s?.body??this.validator?.body,{dynamic:!this.config.aot,models:t}),headers:d(s?.headers??this.validator?.headers,{dynamic:!this.config.aot,models:t,additionalProperties:!0}),params:d(s?.params??this.validator?.params,{dynamic:!this.config.aot,models:t}),query:d(s?.query??this.validator?.query,{dynamic:!this.config.aot,models:t}),cookie:p,response:f(s?.response??this.validator?.response,{dynamic:!this.config.aot,models:t})},m=c(this.event,s),v=h.endsWith("/")?h.slice(0,h.length-1):h+"/";if(!1===this.config.aot){this.dynamicRouter.add(e,h,{validator:l,hooks:m,content:s?.type,handle:r}),!1===this.config.strictPath&&this.dynamicRouter.add(e,v,{validator:l,hooks:m,content:s?.type,handle:r}),this.routes.push({method:e,path:h,composed:null,handler:r,hooks:m});return}let y=n({path:h,method:e,hooks:m,validator:l,handler:r,handleError:this.handleError,onRequest:this.event.request,config:this.config,definitions:i?this.definitions.type:void 0,schema:i?this.schema:void 0,reporter:this.reporter}),g=this.routes.findIndex(t=>t.path===h&&t.method===e);if(-1!==g&&// remove route previously defined
this.routes.splice(g,1),this.routes.push({method:e,path:h,composed:y,handler:r,hooks:m}),-1===h.indexOf(":")&&-1===h.indexOf("*")){let t=this.staticRouter.handlers.length;this.staticRouter.handlers.push(y),this.staticRouter.variables+=`const st${t} = staticRouter.handlers[${t}]
`,this.staticRouter.map[h]||(this.staticRouter.map[h]={code:""}),"ALL"===e?this.staticRouter.map[h].all=`default: return st${t}(ctx)
`:this.staticRouter.map[h].code=`case '${e}': return st${t}(ctx)
${this.staticRouter.map[h].code}`,this.config.strictPath||(this.staticRouter.map[v]||(this.staticRouter.map[v]={code:""}),"ALL"===e?this.staticRouter.map[v].all=`default: return st${t}(ctx)
`:this.staticRouter.map[v].code=`case '${e}': return st${t}(ctx)
${this.staticRouter.map[v].code}`)}else this.router.add(e,h,y),this.config.strictPath||this.router.add(e,h.endsWith("/")?h.slice(0,h.length-1):h+"/",y)}}/**
	 * ### start | Life cycle event
	 * Called after server is ready for serving
	 *
	 * ---
	 * @example
	 * ```typescript
	 * new Elysia()
	 *     .onStart(({ url, port }) => {
	 *         console.log("Running at ${url}:${port}")
	 *     })
	 *     .listen(8080)
	 * ```
	 */onStart(e){return this.on("start",e),this}/**
	 * ### request | Life cycle event
	 * Called on every new request is accepted
	 *
	 * ---
	 * @example
	 * ```typescript
	 * new Elysia()
	 *     .onRequest(({ method, url }) => {
	 *         saveToAnalytic({ method, url })
	 *     })
	 * ```
	 */onRequest(e){return this.on("request",e),this}/**
	 * ### parse | Life cycle event
	 * Callback function to handle body parsing
	 *
	 * If truthy value is returned, will be assigned to `context.body`
	 * Otherwise will skip the callback and look for the next one.
	 *
	 * Equivalent to Express's body parser
	 *
	 * ---
	 * @example
	 * ```typescript
	 * new Elysia()
	 *     .onParse((request, contentType) => {
	 *         if(contentType === "application/json")
	 *             return request.json()
	 *     })
	 * ```
	 */onParse(e){return this.on("parse",e),this}/**
	 * ### transform | Life cycle event
	 * Assign or transform anything related to context before validation.
	 *
	 * ---
	 * @example
	 * ```typescript
	 * new Elysia()
	 *     .onTransform(({ params }) => {
	 *         if(params.id)
	 *             params.id = +params.id
	 *     })
	 * ```
	 */onTransform(e){return this.on("transform",e),this}/**
	 * ### Before Handle | Life cycle event
	 * Intercept request **before(()) main handler is called.
	 *
	 * If truthy value is returned, will be assigned as `Response` and skip the main handler
	 *
	 * ---
	 * @example
	 * ```typescript
	 * new Elysia()
	 *     .onBeforeHandle(({ params: { id }, status }) => {
	 *         if(id && !isExisted(id)) {
	 * 	           status(401)
	 *
	 *             return "Unauthorized"
	 * 	       }
	 *     })
	 * ```
	 */onBeforeHandle(e){return this.on("beforeHandle",e),this}/**
	 * ### After Handle | Life cycle event
	 * Intercept request **after** main handler is called.
	 *
	 * If truthy value is returned, will be assigned as `Response`
	 *
	 * ---
	 * @example
	 * ```typescript
	 * new Elysia()
	 *     .onAfterHandle((context, response) => {
	 *         if(typeof response === "object")
	 *             return JSON.stringify(response)
	 *     })
	 * ```
	 */onAfterHandle(e){return this.on("afterHandle",e),this}/**
	 * ### response | Life cycle event
	 * Called when handler is executed
	 * Good for analytic metrics
	 *
	 * ---
	 * @example
	 * ```typescript
	 * new Elysia()
	 *     .onError(({ code }) => {
	 *         if(code === "NOT_FOUND")
	 *             return "Path not found :("
	 *     })
	 * ```
	 */onResponse(e){return this.on("response",e),this}/**
	 * ### After Handle | Life cycle event
	 * Intercept request **after** main handler is called.
	 *
	 * If truthy value is returned, will be assigned as `Response`
	 *
	 * ---
	 * @example
	 * ```typescript
	 * new Elysia()
	 *     .onAfterHandle((context, response) => {
	 *         if(typeof response === "object")
	 *             return JSON.stringify(response)
	 *     })
	 * ```
	 */trace(e){return this.reporter.on("event",r(this.reporter,e)),this.on("trace",e),this}addError(// eslint-disable-next-line @typescript-eslint/no-unused-vars
e,// eslint-disable-next-line @typescript-eslint/no-unused-vars
t){return this.error(e,t)}error(// eslint-disable-next-line @typescript-eslint/no-unused-vars
e,// eslint-disable-next-line @typescript-eslint/no-unused-vars
t){switch(typeof e){case"string":return(// @ts-ignore
t.prototype[R]=e,// @ts-ignore
this.definitions.error[e]=t,this);case"function":return this.definitions.error=e(this.definitions.error),this}for(let[t,r]of Object.entries(e))// @ts-ignore
r.prototype[R]=t,// @ts-ignore
this.definitions.error[t]=r;return this}/**
	 * ### Error | Life cycle event
	 * Called when error is thrown during processing request
	 *
	 * ---
	 * @example
	 * ```typescript
	 * new Elysia()
	 *     .onError(({ code }) => {
	 *         if(code === "NOT_FOUND")
	 *             return "Path not found :("
	 *     })
	 * ```
	 */onError(e){return this.on("error",e),this}/**
	 * ### stop | Life cycle event
	 * Called after server stop serving request
	 *
	 * ---
	 * @example
	 * ```typescript
	 * new Elysia()
	 *     .onStop((app) => {
	 *         cleanup()
	 *     })
	 * ```
	 */onStop(e){return this.on("stop",e),this}/**
	 * ### on
	 * Syntax sugar for attaching life cycle event by name
	 *
	 * Does the exact same thing as `.on[Event]()`
	 *
	 * ---
	 * @example
	 * ```typescript
	 * new Elysia()
	 *     .on('error', ({ code }) => {
	 *         if(code === "NOT_FOUND")
	 *             return "Path not found :("
	 *     })
	 * ```
	 */on(e,t){for(let r of Array.isArray(t)?t:[t])switch(r=y(r),e){case"start":this.event.start.push(r);break;case"request":this.event.request.push(r);break;case"response":this.event.onResponse.push(r);break;case"parse":this.event.parse.splice(this.event.parse.length-1,0,r);break;case"transform":this.event.transform.push(r);break;case"beforeHandle":this.event.beforeHandle.push(r);break;case"afterHandle":this.event.afterHandle.push(r);break;case"trace":this.event.trace.push(r);break;case"error":this.event.error.push(r);break;case"stop":this.event.stop.push(r)}return this}/**
	 * ### group
	 * Encapsulate and group path with prefix
	 *
	 * ---
	 * @example
	 * ```typescript
	 * new Elysia()
	 *     .group('/v1', app => app
	 *         .get('/', () => 'Hi')
	 *         .get('/name', () => 'Elysia')
	 *     })
	 * ```
	 */group(e,t,r){let s=new x({...this.config,prefix:""});s.store=this.store;let i="object"==typeof t,o=(i?r:t)(s);return this.decorators=p(this.decorators,s.decorators),o.event.request.length&&(this.event.request=[...this.event.request,...o.event.request]),o.event.onResponse.length&&(this.event.onResponse=[...this.event.onResponse,...o.event.onResponse]),this.model(o.definitions.type),Object.values(s.routes).forEach(({method:r,path:s,handler:n,hooks:a})=>{s=(i?"":this.config.prefix)+e+s,i?this.add(r,s,n,c(t,{...a,error:a.error?Array.isArray(a.error)?[...a.error,...o.event.error]:[a.error,...o.event.error]:o.event.error})):this.add(r,s,n,c(a,{error:o.event.error}),{skipPrefix:!0})}),this}/**
	 * ### guard
	 * Encapsulate and pass hook into all child handler
	 *
	 * ---
	 * @example
	 * ```typescript
	 * import { t } from 'elysia'
	 *
	 * new Elysia()
	 *     .guard({
	 *          schema: {
	 *              body: t.Object({
	 *                  username: t.String(),
	 *                  password: t.String()
	 *              })
	 *          }
	 *     }, app => app
	 *         .get("/", () => 'Hi')
	 *         .get("/name", () => 'Elysia')
	 *     })
	 * ```
	 */guard(e,t){if(!t)return this.event=m(this.event,e),this.validator={body:e.body,headers:e.headers,params:e.params,query:e.query,response:e.response},this;let r=new x;r.store=this.store;let s=t(r);return this.decorators=p(this.decorators,r.decorators),s.event.request.length&&(this.event.request=[...this.event.request,...s.event.request]),s.event.onResponse.length&&(this.event.onResponse=[...this.event.onResponse,...s.event.onResponse]),this.model(s.definitions.type),Object.values(r.routes).forEach(({method:t,path:r,handler:i,hooks:o})=>{this.add(t,r,i,c(e,{...o,error:o.error?Array.isArray(o.error)?[...o.error,...s.event.error]:[o.error,...s.event.error]:s.event.error}))}),this}/**
	 * ### use
	 * Merge separate logic of Elysia with current
	 *
	 * ---
	 * @example
	 * ```typescript
	 * const plugin = (app: Elysia) => app
	 *     .get('/plugin', () => 'hi')
	 *
	 * new Elysia()
	 *     .use(plugin)
	 * ```
	 */use(e){return e instanceof Promise?(this.lazyLoadModules.push(e.then(e=>"function"==typeof e?e(this):"function"==typeof e.default?e.default(this):this._use(e)).then(e=>e.compile())),this):this._use(e)}_use(e){if("function"==typeof e){let t=e(this);return t instanceof Promise?(this.lazyLoadModules.push(t.then(e=>"function"==typeof e?e(this):"function"==typeof e.default?e.default(this):this._use(e)).then(e=>e.compile())),this):t}let{name:t,seed:r}=e.config;e.getServer=()=>this.getServer();let s=e.config.scoped;if(s){if(t){t in this.dependencies||(this.dependencies[t]=[]);let e=void 0!==r?l(t+JSON.stringify(r)):0;if(this.dependencies[t].some(t=>e===t))return this;this.dependencies[t].push(e)}e.model(this.definitions.type),e.error(this.definitions.error),e.onRequest(e=>{Object.assign(e,this.decorators),Object.assign(e.store,this.store)}),e.event.trace=[...this.event.trace,...e.event.trace],e.config.aot&&e.compile();let s=this.mount(e.fetch);return this.routes=this.routes.concat(s.routes),this}for(let{method:t,path:r,handler:s,hooks:i}of(this.decorate(e.decorators),this.state(e.store),this.model(e.definitions.type),this.error(e.definitions.error),Object.values(e.routes)))this.add(t,r,s,c(i,{error:e.event.error}));if(!s){if(t){t in this.dependencies||(this.dependencies[t]=[]);let s=void 0!==r?l(t+JSON.stringify(r)):0;if(this.dependencies[t].some(e=>s===e))return this;this.dependencies[t].push(s),this.event=m(this.event,v(e.event),s)}else this.event=m(this.event,v(e.event))}return this}mount(e,t){if("function"==typeof e||0===e.length||"/"===e){let r="function"==typeof e?e:t,s=async({request:e,path:t})=>r(new Request("http://a.cc"+t,e));return this.all("/",s,{type:"none"}),this.all("/*",s,{type:"none"}),this}let r=e.length,s=async({request:e,path:s})=>t(new Request("http://a.cc"+s.slice(r),e));return this.all(e,s,{type:"none"}),this.all(e+(e.endsWith("/")?"*":"/*"),s,{type:"none"}),this}/**
	 * ### get
	 * Register handler for path with method [GET]
	 *
	 * ---
	 * @example
	 * ```typescript
	 * import { Elysia, t } from 'elysia'
	 *
	 * new Elysia()
	 *     .get('/', () => 'hi')
	 *     .get('/with-hook', () => 'hi', {
	 *         schema: {
	 *             response: t.String()
	 *         }
	 *     })
	 * ```
	 */get(e,t,r){return this.add("GET",e,t,r),this}/**
	 * ### post
	 * Register handler for path with method [POST]
	 *
	 * ---
	 * @example
	 * ```typescript
	 * import { Elysia, t } from 'elysia'
	 *
	 * new Elysia()
	 *     .post('/', () => 'hi')
	 *     .post('/with-hook', () => 'hi', {
	 *         schema: {
	 *             response: t.String()
	 *         }
	 *     })
	 * ```
	 */post(e,t,r){return this.add("POST",e,t,r),this}/**
	 * ### put
	 * Register handler for path with method [PUT]
	 *
	 * ---
	 * @example
	 * ```typescript
	 * import { Elysia, t } from 'elysia'
	 *
	 * new Elysia()
	 *     .put('/', () => 'hi')
	 *     .put('/with-hook', () => 'hi', {
	 *         schema: {
	 *             response: t.String()
	 *         }
	 *     })
	 * ```
	 */put(e,t,r){return this.add("PUT",e,t,r),this}/**
	 * ### patch
	 * Register handler for path with method [PATCH]
	 *
	 * ---
	 * @example
	 * ```typescript
	 * import { Elysia, t } from 'elysia'
	 *
	 * new Elysia()
	 *     .patch('/', () => 'hi')
	 *     .patch('/with-hook', () => 'hi', {
	 *         schema: {
	 *             response: t.String()
	 *         }
	 *     })
	 * ```
	 */patch(e,t,r){return this.add("PATCH",e,t,r),this}/**
	 * ### delete
	 * Register handler for path with method [DELETE]
	 *
	 * ---
	 * @example
	 * ```typescript
	 * import { Elysia, t } from 'elysia'
	 *
	 * new Elysia()
	 *     .delete('/', () => 'hi')
	 *     .delete('/with-hook', () => 'hi', {
	 *         schema: {
	 *             response: t.String()
	 *         }
	 *     })
	 * ```
	 */delete(e,t,r){return this.add("DELETE",e,t,r),this}/**
	 * ### options
	 * Register handler for path with method [OPTIONS]
	 *
	 * ---
	 * @example
	 * ```typescript
	 * import { Elysia, t } from 'elysia'
	 *
	 * new Elysia()
	 *     .options('/', () => 'hi')
	 *     .options('/with-hook', () => 'hi', {
	 *         schema: {
	 *             response: t.String()
	 *         }
	 *     })
	 * ```
	 */options(e,t,r){return this.add("OPTIONS",e,t,r),this}/**
	 * ### all
	 * Register handler for path with any method
	 *
	 * ---
	 * @example
	 * ```typescript
	 * import { Elysia, t } from 'elysia'
	 *
	 * new Elysia()
	 *     .all('/', () => 'hi')
	 * ```
	 */all(e,t,r){return this.add("ALL",e,t,r),this}/**
	 * ### head
	 * Register handler for path with method [HEAD]
	 *
	 * ---
	 * @example
	 * ```typescript
	 * import { Elysia, t } from 'elysia'
	 *
	 * new Elysia()
	 *     .head('/', () => 'hi')
	 *     .head('/with-hook', () => 'hi', {
	 *         schema: {
	 *             response: t.String()
	 *         }
	 *     })
	 * ```
	 */head(e,t,r){return this.add("HEAD",e,t,r),this}/**
	 * ### connect
	 * Register handler for path with method [CONNECT]
	 *
	 * ---
	 * @example
	 * ```typescript
	 * import { Elysia, t } from 'elysia'
	 *
	 * new Elysia()
	 *     .connect('/', () => 'hi')
	 *     .connect('/with-hook', () => 'hi', {
	 *         schema: {
	 *             response: t.String()
	 *         }
	 *     })
	 * ```
	 */connect(e,t,r){return this.add("CONNECT",e,t,r),this}/**
	 * ### ws
	 * Register handler for path with method [ws]
	 *
	 * ---
	 * @example
	 * ```typescript
	 * import { Elysia, t } from 'elysia'
	 *
	 * new Elysia()
	 *     .ws('/', {
	 *         message(ws, message) {
	 *             ws.send(message)
	 *         }
	 *     })
	 * ```
	 */ws(e,t){let r=t.transformMessage?Array.isArray(t.transformMessage)?t.transformMessage:[t.transformMessage]:void 0,i=null,o=d(t?.body,{models:this.definitions.type}),n=d(t?.response,{models:this.definitions.type}),a=e=>{let t=e.charCodeAt(0);if(47===t||123===t)try{e=JSON.parse(e)}catch{// Not empty
}else Number.isNaN(+e)||(e=+e);if(r?.length)for(let t=0;t<r.length;t++){let s=r[t](e);void 0!==s&&(e=s)}return e};return this.get(e,// @ts-ignore
e=>{// eslint-disable-next-line @typescript-eslint/no-unused-vars
let{set:r,path:h,qi:c,headers:d,query:f,params:p}=e;if(null===i&&(i=this.getServer()),!i?.upgrade(e.request,{headers:"function"==typeof t.upgrade?t.upgrade(e):t.upgrade,data:{validator:n,open(r){t.open?.(new s(r,e))},message:(r,i)=>{let n=a(i);if(o?.Check(n)===!1)return void r.send(new w("message",o,n).message);t.message?.(new s(r,e),n)},drain(r){t.drain?.(new s(r,e))},close(r,i,o){t.close?.(new s(r,e),i,o)}}}))return r.status=400,"Expected a websocket connection"},{beforeHandle:t.beforeHandle,transform:t.transform,headers:t.headers,params:t.params,query:t.query}),this}/**
	 * ### route
	 * Register handler for path with custom method
	 *
	 * ---
	 * @example
	 * ```typescript
	 * import { Elysia, t } from 'elysia'
	 *
	 * new Elysia()
	 *     .route('CUSTOM', '/', () => 'hi')
	 *     .route('CUSTOM', '/with-hook', () => 'hi', {
	 *         schema: {
	 *             response: t.String()
	 *         }
	 *     })
	 * ```
	 */route(e,t,r,{config:s,...i}={config:{allowMeta:!1}}){return this.add(e,t,r,i,s),this}/**
	 * ### state
	 * Assign global mutatable state accessible for all handler
	 *
	 * ---
	 * @example
	 * ```typescript
	 * new Elysia()
	 *     .state('counter', 0)
	 *     .get('/', (({ counter }) => ++counter)
	 * ```
	 */state(e,t){switch(typeof e){case"object":return this.store=p(this.store,e),this;case"function":return this.store=e(this.store),this}return e in this.store||(this.store[e]=t),this}/**
	 * ### decorate
	 * Define custom method to `Context` accessible for all handler
	 *
	 * ---
	 * @example
	 * ```typescript
	 * new Elysia()
	 *     .decorate('getDate', () => Date.now())
	 *     .get('/', (({ getDate }) => getDate())
	 * ```
	 */decorate(e,t){switch(typeof e){case"object":return this.decorators=p(this.decorators,e),this;case"function":return this.decorators=e(this.decorators),this}return e in this.decorators||(this.decorators[e]=t),this}/**
	 * Derive new property for each request with access to `Context`.
	 *
	 * If error is thrown, the scope will skip to handling error instead.
	 *
	 * ---
	 * @example
	 * new Elysia()
	 *     .state('counter', 1)
	 *     .derive(({ store }) => ({
	 *         increase() {
	 *             store.counter++
	 *         }
	 *     }))
	 */derive(e){return(// @ts-ignore
e.$elysia="derive",this.onTransform(e))}model(e,t){switch(typeof e){case"object":return Object.entries(e).forEach(([e,t])=>{e in this.definitions.type||// @ts-ignore
(this.definitions.type[e]=t)}),this;case"function":return this.definitions.type=e(this.definitions.type),this}return this.definitions.type[e]=t,this}mapDerive(e){return(// @ts-ignore
e.$elysia="derive",this.onTransform(e))}affix(e,t,r){if(""===r)return this;let s=["_","-"," "],i=e=>e[0].toUpperCase()+e.slice(1),o="prefix"===e?(e,t)=>s.includes(e.at(-1)??"")?e+t:e+i(t):s.includes(r.at(-1)??"")?(e,t)=>t+e:(e,t)=>t+i(e),n=e=>{let t={};switch(e){case"decorator":for(let e in this.decorators)t[o(r,e)]=this.decorators[e];this.decorators=t;break;case"state":for(let e in this.store)t[o(r,e)]=this.store[e];this.store=t;break;case"model":for(let e in this.definitions.type)t[o(r,e)]=this.definitions.type[e];this.definitions.type=t;break;case"error":for(let e in this.definitions.error)t[o(r,e)]=this.definitions.error[e];this.definitions.error=t}},a=Array.isArray(t)?t:[t];for(let e of a.some(e=>"all"===e)?["decorator","state","model","error"]:a)n(e);return this}prefix(e,t){return this.affix("prefix",e,t)}suffix(e,t){return this.affix("suffix",e,t)}compile(){return this.fetch=this.config.aot?a(this):b(this),"function"==typeof this.server?.reload&&this.server.reload({...this.server,fetch:this.fetch}),this}handle=async e=>this.fetch(e);/**
	 * Handle can be either sync or async to save performance.
	 *
	 * Beside benchmark purpose, please use 'handle' instead.
	 */fetch=e=>(this.fetch=this.config.aot?a(this):b(this))(e);handleError=async(e,t)=>(this.handleError=this.config.aot?h(this):g(this))(e,t);outerErrorHandler=e=>new Response(e.message||e.name||"Error",{// @ts-ignore
    status:e?.status??500});/**
	 * ### listen
	 * Assign current instance to port and start serving
	 *
	 * ---
	 * @example
	 * ```typescript
	 * new Elysia()
	 *     .get("/", () => 'hi')
	 *     .listen(8080)
	 * ```
	 */listen=(e,t)=>{if(!Bun)throw Error("Bun to run");if(this.compile(),"string"==typeof e&&Number.isNaN(e=+e.trim()))throw Error("Port must be a numeric value");let r=this.fetch,s="object"==typeof e?{development:!k,...this.config.serve,...e,websocket:{...this.config.websocket,...i},fetch:r,error:this.outerErrorHandler}:{development:!k,...this.config.serve,websocket:{...this.config.websocket,...i},port:e,fetch:r,error:this.outerErrorHandler};if("undefined"==typeof Bun)throw Error(".listen() is designed to run on Bun only. If you are running Elysia in other environment please use a dedicated plugin or export the handler via Elysia.fetch");return this.server=Bun?.serve(s),this.event.start.length&&(async()=>{let e=Object.assign(this.decorators,{store:this.store,app:this});for(let t=0;t<this.event.transform.length;t++){let r=this.event.transform[t](e);// @ts-ignore
"derive"===this.event.transform[t].$elysia&&(r instanceof Promise?Object.assign(e,await r):Object.assign(e,r))}for(let t=0;t<this.event.start.length;t++)this.event.start[t](e)})(),t&&t(this.server),Promise.all(this.lazyLoadModules).then(()=>{Bun?.gc(!1)}),this};/**
	 * ### stop
	 * Stop server from serving
	 *
	 * ---
	 * @example
	 * ```typescript
	 * const app = new Elysia()
	 *     .get("/", () => 'hi')
	 *     .listen(8080)
	 *
	 * // Sometime later
	 * app.stop()
	 * ```
	 */stop=async()=>{if(!this.server)throw Error("Elysia isn't running. Call `app.listen` to start the server.");this.server.stop(),this.event.stop.length&&(async()=>{let e=Object.assign(this.decorators,{store:this.store,app:this});for(let t=0;t<this.event.transform.length;t++){let r=this.event.transform[t](e);// @ts-ignore
"derive"===this.event.transform[t].$elysia&&(r instanceof Promise?Object.assign(e,await r):Object.assign(e,r))}for(let t=0;t<this.event.stop.length;t++)this.event.stop[t](e)})()};/**
	 * Wait until all lazy loaded modules all load is fully
	 */get modules(){return Promise.all(this.lazyLoadModules)}}export{mapResponse,mapCompactResponse,mapEarlyResponse}from"./handler";export{t}from"./custom-types";export{Cookie}from"./cookie";export{getSchemaValidator,mergeDeep,mergeHook,mergeObjectArray,getResponseSchemaValidator}from"./utils";export{ParseError,NotFoundError,ValidationError,InternalServerError,InvalidCookieSignature}from"./error";export{x as Elysia};